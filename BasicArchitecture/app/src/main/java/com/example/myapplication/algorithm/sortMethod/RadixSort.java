package com.example.myapplication.algorithm.sortMethod;
//计数排序
public class RadixSort {
/*
1)基本思想：
    根据每一位来排序(比如11位电话号码，可以从最后一位排序)，每一位的排序可以用其他排序方式

2)例子
    排序11位的手机号，可以从最后一位开始比较，可以用桶排序或者计数排序，他们的时间复杂度都是O(n),所以我们要进行11次O(n)近似于O(n)


3)使用场景
    基数排序对要排序的数据是有要求的，需要可以分割出独立的“位”来比较，而且位之间有递进的关系，如果 a 数据的高位比 b 数据大，
    那剩下的低位就不用比较了。除此之外，每一位的数据范围不能太大，要可以用线性排序算法来排序，否则，基数排序的时间复杂度就无法做到 O(n) 了。

    如果位数不够可以补相应的东西，例如单词排序，因为单词的ASKII的值大于0，所以缺的部分补0就好了
}*/
}
